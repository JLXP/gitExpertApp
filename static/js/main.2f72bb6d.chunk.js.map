{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFecthGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","GifGrid","loading","state","setstate","useEffect","then","imgs","useFecthGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAKaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,uBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAOlB,UACE,6BAAMD,IACN,uBACEQ,KAAK,OACLC,MAAQT,EACRU,SArBkB,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,c,+BCVnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAA2B,IAAxBJ,EAAuB,EAAvBA,GAAKC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAIvC,OAFAc,QAAQC,IAAIN,EAAIC,EAAOV,GAGnB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAQjB,IACb,kCAAMU,EAAN,WCJCQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAGtB,ECJwB,SAAEA,GAG1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAZAC,qBAAW,WACPzB,EAASC,GACJyB,MAAM,SAAAC,GACCV,QAAQC,IAAIS,GACZH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAI3B,CAACrB,IAEIsB,EDjByBK,CAAc3B,GAAjCa,EAAb,EAAQN,KAAYc,EAApB,EAAoBA,QAcpB,OALAL,QAAQC,IAAII,GAMR,qCACI,oBAAIH,UAAU,oCAAd,SAAoDlB,IAElDqB,GAAW,mBAAGH,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEQL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADGA,EAAIC,aEzB3BiB,EAAe,WAIxB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,qCACE,8CAEA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEI4C,EAAWpB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEAA,SAAaA,GADLA,Y,MCdxB8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2f72bb6d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types'\n\n\n\nexport const AddCategory = ( {setCategories} ) => {\n\n    const [inputValue, setinputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setinputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2){\n            setCategories( cats => [inputValue,...cats,]);\n            setinputValue('');\n        }\n\n    }\n\n\n    return (\n        <form onSubmit={handleSubmit}>\n          <h1>{ inputValue }</h1>\n          <input\n            type=\"text\"\n            value={ inputValue }\n            onChange={ handleInputChange }\n          />  \n        </form>\n    )\n}\n\n\n//Los proptotypes son importantes para poner una condiciÃ³n de que es necesario que envie datos\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=XGaCbptgJKpIOyZ9k50ozBUQMb7Q2YIG`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n            \n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ( { id , title, url } ) => {\n    \n    console.log(id, title, url);\n    \n    return (\n        <div className=\"card animate__animated animate__bounce\" >\n            <img src = { url } ></img>\n            <p> { title } </p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFecthGifs } from '../hooks/useFecthGifs';\nimport { GifGridItem } from './GifGridItem';\n//import { getGifs } from '../helpers/getGifs';\n\nexport const GifGrid = ({ category }) => {\n\n    \n    const { data:images,loading } = useFecthGifs( category );\n\n    // useEffect( () => {\n    //     getGifs( category )\n    //         .then( setImages );\n    // },[ category ]);\n\n    \n\n    console.log(loading);\n    \n    //No debe llamarse esta funcion por que crea un loop en la aplicacion\n    //getGifs();\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\" >{category}</h3> \n            \n            { loading && <p className=\"animate__animated animate__flash\">Loading</p>  }   \n            <div className=\"card-grid\" >          \n                {    \n                    images.map (img =>  (\n                        <GifGridItem\n                            key = { img.id } \n                            { ...img } \n                        />\n                    ))\n                        \n                }  \n            </div>         \n        </>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport {getGifs} from '../helpers/getGifs';\n\n\nexport const useFecthGifs = ( category ) => {\n\n    \n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n\n    useEffect( () => {\n        getGifs( category )\n            .then( imgs => {            \n                    console.log(imgs);\n                    setstate({\n                        data: imgs,\n                        loading: false\n                    });\n                \n            });\n    },[category])\n\n    return state;\n}","import React,{useState} from 'react'\n\n//Estas importaciones son por apartados dependiendo de lo que realice cada widget\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    //const categories = ['One Punch', 'Dragon Ball', 'Naruto']\n    //Este Hook trae el primer argumento que en este caso es el nombre de ONE PUNCH\n    const [categories, setCategories] = useState(['One Punch']);\n\n    return (\n        <>\n          <h2>GifExpertApp</h2>\n\n          <AddCategory setCategories={ setCategories }  />\n          <hr></hr>\n\n          <ol>\n          {\n              categories.map(category => (\n                <GifGrid \n                key = { category } \n                category = { category }  />\n              ))\n          }\n          </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//instancia del componente Gif Expert\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}